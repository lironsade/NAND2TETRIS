// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    Or(a=reset, b=inc, out=tempor);
    Or(a=tempor, b=load, out=shouldLoad);
    Inc16(in=regout, out=incedreg);
    Register(in=inreg, load=shouldLoad, out=regout, out=out);
    Not(in=load, out=notLoad);
    Not(in=reset, out=notReset);
    And(a=inc ,b=notLoad, out=incAndNotLoad);
    And(a=shouldLoad ,b=notReset, out=shouldLoadAndNotReset);
    Mux16(a=in, b=incedreg, sel=incAndNotLoad, out=tempOut);
    Mux16(a=false, b=tempOut, sel=shouldLoadAndNotReset, out=inreg);
}
